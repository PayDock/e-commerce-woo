image: 412245956714.dkr.ecr.ap-southeast-2.amazonaws.com/docker-hub/library/amazoncorretto:21-alpine

stages:
  - test
  - publish
  - quality
  - test_automation
  - deploy_cba
  - deploy_multitenant

# noinspection ComposeMissingKeys
include:
  - project: "paydock/platform/gitlab-templates"
    file: "/deploy/version.yml"
  - project: "paydock/platform/gitlab-templates"
    file: "/security/gitlab-security-scans.yaml"
  - project: "paydock/platform/gitlab-templates"
    file: "/code_quality.yml"

run_tests:
  image: composer:lts
  stage: test
  script:
    - composer install
    - ./vendor/bin/phpunit ./tests

run_phpcs:
  image: composer:lts
  stage: quality
  script:
    - composer install
    - ./vendor/bin/phpcs --report=json . > phpcs-report.json || true
    - ls phpcs-report.json
  artifacts:
    name: phpcs-report.json
    paths:
      - phpcs-report.json

phpcs_report:
  image: python:3.9-slim
  stage: quality
  needs:
    - job: run_phpcs
      artifacts: true
  script:
    - python phpcs2codeclimate.py
  artifacts:
    reports:
      codequality:
        - code_climate_phpcs_report.json

prepare_power_board_version:
  image: composer:lts
  stage: publish
  #  only:
  #    - main
  #    - power_board
  needs:
    - job: create_version
      artifacts: true
  script:
    - VERSION=$(cat version)
    - composer install
    - /bin/sh build/power-board/build-powerboard.prod.sh
    - /bin/sh build/power-board/clear-cs-warnings-powerboard.sh
    - MAJOR_MINOR=$(cat plugin.php | grep "PLUGIN_VERSION'," | sed -e "s/^.*\([0-9].[0-9].[0-9]\).*$/\1/")
    - echo "ARTIFACT_NAME=woo_powerboard-$MAJOR_MINOR-$VERSION" > VERSION.TXT
  artifacts:
    paths:
      - VERSION.TXT
    reports:
      dotenv: VERSION.TXT

publish_power_board:
  image: composer:lts
  stage: publish
  #  only:
  #    - main
  #    - power_board
  needs:
    - job: prepare_power_board_version
      artifacts: true
  script:
    - composer install --no-dev
    - /bin/sh build/power-board/build-powerboard.prod.sh
    - /bin/sh build/power-board/clear-cs-warnings-powerboard.sh
    - /bin/sh cleanup_files_for_zip.sh
    - echo "ZIP_PUBLISH_JOB_ID=$CI_JOB_ID" > zip_publish.job_id
    - mkdir -p ../power-board
    - cp -r ./* ../power-board/
    - mv ../power-board/ ./
  artifacts:
    name: $ARTIFACT_NAME
    paths:
      - power-board/
    reports:
      dotenv: zip_publish.job_id

prepare_paydock_version:
  image: composer:lts
  stage: publish
  #  only:
  #    - main
  #    - power_board
  needs:
    - job: create_version
      artifacts: true
  script:
    - VERSION=$(cat version)
    - composer install
    - /bin/sh build/paydock/build-paydock.prod.sh
    - /bin/sh build/paydock/clear-cs-warnings-paydock.sh
    - MAJOR_MINOR=$(cat plugin.php | grep "PLUGIN_VERSION'," | sed -e "s/^.*\([0-9].[0-9].[0-9]\).*$/\1/")
    - echo "ARTIFACT_NAME=woo_paydock-$MAJOR_MINOR-$VERSION" > VERSION.TXT
  artifacts:
    paths:
      - VERSION.TXT
    reports:
      dotenv: VERSION.TXT

publish_paydock:
  image: composer:lts
  stage: publish
  #  only:
  #    - main
  #    - power_board
  needs:
    - job: prepare_paydock_version
      artifacts: true
  script:
    - composer install --no-dev
    - /bin/sh build/paydock/build-paydock.prod.sh
    - /bin/sh build/paydock/clear-cs-warnings-paydock.sh
    - /bin/sh cleanup_files_for_zip.sh
    - echo "ZIP_PUBLISH_JOB_ID=$CI_JOB_ID" > zip_publish.job_id
    - mkdir -p ../paydock-for-woocommerce
    - cp -r ./* ../paydock-for-woocommerce/
    - mv ../paydock-for-woocommerce/ ./
  artifacts:
    name: $ARTIFACT_NAME
    paths:
      - paydock-for-woocommerce/
    reports:
      dotenv: zip_publish.job_id

trigger_downstream_pipeline:
  stage: deploy_multitenant
  needs:
    - job: publish_paydock
      artifacts: true
    - job: publish_power_board
      artifacts: true
  trigger:
    project: paydock/bounded-contexts/woocommerce/woocommerce-test-site
    branch: mt-qa-test
    strategy: depend
  variables:
    SOURCE_PROJECT_ID: $CI_PROJECT_ID
    SOURCE_JOB_ID: $CI_JOB_ID
  when: on_success
# simulate_deploy_paydock_preprod:
#   stage: deploy_multitenant
#   #  only:
#   #    - main
#   #    - power_board
#   needs:
#     - job: publish_paydock
#       artifacts: true
#   trigger:
#     project: paydock/bounded-contexts/woocommerce/multi-project-downstream
#     branch: development
#   variables:
#     DEPLOYMENT_ENV_URL: "This should be the paydock preprod url"
#     UPSTREAM_PROJECT_ID: $CI_PROJECT_ID
#     UPSTREAM_JOB_ID: $ZIP_PUBLISH_JOB_ID
#   when: manual

# simulate_deploy_paydock_sandbox:
#   stage: deploy_multitenant
#   #  only:
#   #    - main
#   #    - power_board
#   needs:
#     - job: publish_paydock
#       artifacts: true
#   trigger:
#     project: paydock/bounded-contexts/woocommerce/multi-project-downstream
#     branch: development
#   variables:
#     DEPLOYMENT_ENV_URL: "This should be the paydock sandbox url"
#     UPSTREAM_PROJECT_ID: $CI_PROJECT_ID
#     UPSTREAM_JOB_ID: $ZIP_PUBLISH_JOB_ID
#   when: manual

