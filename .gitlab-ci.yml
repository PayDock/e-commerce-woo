image: 412245956714.dkr.ecr.ap-southeast-2.amazonaws.com/docker-hub/library/amazoncorretto:21-alpine
stages:
  - test
  - publish
  - quality
  - test_automation
  - deploy_cba
  - deploy_multitenant
# Includes must come after defining all necessary stages
include:
  - project: "paydock/platform/gitlab-templates"
    file: "/deploy/version.yml"
  - project: "paydock/platform/gitlab-templates"
    file: "/security/gitlab-security-scans.yaml"
  - project: "paydock/platform/gitlab-templates"
    file: "/code_quality.yml"
run_tests:
  image: composer:lts
  stage: test
  script:
    - composer install
    - ./vendor/bin/phpunit ./tests
run_phpcs:
  image: composer:lts
  stage: quality
  script:
    - composer install
    - ./vendor/bin/phpcs --report=json . > phpcs-report.json || true
    - ls phpcs-report.json
  artifacts:
    name: phpcs-report.json
    paths:
      - phpcs-report.json
phpcs_report:
  image: python:3.9-slim
  stage: quality
  needs:
    - job: run_phpcs
      artifacts: true
  script:
    - python phpcs2codeclimate.py
  artifacts:
    reports:
      codequality:
        - code_climate_phpcs_report.json
prepare_power_board_version:
  image: composer:lts
  stage: publish
  needs:
    - job: create_version
      artifacts: true
  script:
    - VERSION=$(cat version)
    - composer install
    - /bin/sh build/power-board/build-powerboard.prod.sh
    - /bin/sh build/power-board/clear-cs-warnings-powerboard.sh
    - MAJOR_MINOR=$(cat plugin.php | grep "PLUGIN_VERSION'," | sed -e "s/^.*\([0-9].[0-9].[0-9]\).*$/\1/")
    - echo "ARTIFACT_NAME=woo_powerboard-$MAJOR_MINOR-$VERSION" > VERSION.TXT
  artifacts:
    paths:
      - VERSION.TXT
    reports:
      dotenv: VERSION.TXT
publish_power_board:
  image: composer:lts
  stage: publish
  needs:
    - job: prepare_power_board_version
      artifacts: true
  script:
    - composer install --no-dev
    - /bin/sh build/power-board/build-powerboard.prod.sh
    - /bin/sh build/power-board/clear-cs-warnings-powerboard.sh
    - /bin/sh cleanup_files_for_zip.sh
    - echo "ZIP_PUBLISH_JOB_ID=$CI_JOB_ID" > zip_publish.job_id
    - mkdir -p ../power-board
    - cp -r ./* ../power-board/
    - mv ../power-board/ ./
  artifacts:
    name: $ARTIFACT_NAME
    paths:
      - power-board/
    reports:
      dotenv: zip_publish.job_id
prepare_paydock_version:
  image: composer:lts
  stage: publish
  needs:
    - job: create_version
      artifacts: true
  script:
    - VERSION=$(cat version)
    - composer install
    - /bin/sh build/paydock/build-paydock.prod.sh
    - /bin/sh build/paydock/clear-cs-warnings-paydock.sh
    - MAJOR_MINOR=$(cat plugin.php | grep "PLUGIN_VERSION'," | sed -e "s/^.*\([0-9].[0-9].[0-9]\).*$/\1/")
    - echo "ARTIFACT_NAME=woo_paydock-$MAJOR_MINOR-$VERSION" > VERSION.TXT
  artifacts:
    paths:
      - VERSION.TXT
    reports:
      dotenv: VERSION.TXT
publish_paydock:
  image: composer:lts
  stage: publish
  needs:
    - job: prepare_paydock_version
      artifacts: true
  script:
    - composer install --no-dev
    - /bin/sh build/paydock/build-paydock.prod.sh
    - /bin/sh build/paydock/clear-cs-warnings-paydock.sh
    - /bin/sh cleanup_files_for_zip.sh
    - echo "ZIP_PUBLISH_JOB_ID=$CI_JOB_ID" > zip_publish.job_id
    - mkdir -p ../paydock-for-woocommerce
    - cp -r ./* ../paydock-for-woocommerce/
    - mv ../paydock-for-woocommerce/ ./
  artifacts:
    name: $ARTIFACT_NAME
    paths:
      - paydock-for-woocommerce/
    reports:
      dotenv: zip_publish.job_id
create_version:
  stage: publish
  script:
    - version=$(date +%Y%m%d)-$CI_PIPELINE_ID
    - echo $version > version
  artifacts:
    paths:
      - version

trigger_multitenant_automation:
  stage: test_automation
  rules:
    - exists:
        - paydock-for-woocommerce/**/*
  #   - if: '$CI_COMMIT_BRANCH == "main"'
  trigger:
    project: "paydock/shared/testing/autotests"
    branch: main
    strategy: depend
  variables:
    E_COMMERCE_UI: "true"
    ENVIRONMENT: "mt-sandbox"
    UPSTREAM_PROJECT_ID: "$CI_PROJECT_ID"
    UPSTREAM_PIPELINE_ID: "$CI_PIPELINE_ID"
    UPSTREAM_JOB_ID: "$ZIP_PUBLISH_JOB_ID"
    UPSTREAM_BRANCH: "$CI_COMMIT_REF_NAME"
    ADD_ARGS: '--woocommerce_env=mt-qa --woocommerce_plugin_name="Paydock for WooCommerce"'

trigger_downstream:
  stage: deploy_multitenant
  needs:
    - job: publish_paydock
      artifacts: true
    - job: publish_power_board
      artifacts: true
  trigger:
    project: paydock/bounded-contexts/woocommerce/woocommerce-test-site
    branch: mt-qa-test
    strategy: depend
    forward:
      pipeline_variables: false
  variables:
    REPOSITORY_URI: "412245956714.dkr.ecr.ap-southeast-2.amazonaws.com/woocommerce"
    UPSTREAM_PROJECT_ID: "$CI_PROJECT_ID" # GitLab project ID of upstream
    UPSTREAM_PIPELINE_ID: "$CI_PIPELINE_ID"
    UPSTREAM_BRANCH: "$CI_COMMIT_REF_NAME"
