image: 412245956714.dkr.ecr.ap-southeast-2.amazonaws.com/docker-hub/library/amazoncorretto:21-alpine

stages:
 - test
 - publish
 - quality
 - deploy_cba

include:
  - project: 'paydock/platform/gitlab-templates'
    file: '/deploy/version.yml'
  - project: 'paydock/platform/gitlab-templates'
    file: '/security/gitlab-security-scans.yaml'
  - project: 'paydock/platform/gitlab-templates'
    file: '/code_quality.yml'

run_phpcs:
  image: composer:lts
  stage: quality
  script:
    - composer install
    - ./vendor/bin/phpcs --report=json . > phpcs-report.json || true
    - ls phpcs-report.json
  artifacts:
    name: phpcs-report.json
    paths:
      - phpcs-report.json

phpcs_report:
  image: python:3.9-slim
  stage: quality
  needs:
    - job: run_phpcs
      artifacts: true
  script:
    - python phpcs2codeclimate.py
  artifacts:
    reports:
      codequality:
        - code_climate_phpcs_report.json

prepare_power_board_version:
  stage: publish
#  only:
#    - power_board
  needs:
    - job: create_version
      artifacts: true
  script:
    - VERSION=$(cat version)
    - MAJOR_MINOR=$(cat power-board.php | grep "POWER_BOARD_PLUGIN_VERSION'," | sed -e "s/^.*\([0-9].[0-9].[0-9]\).*$/\1/")
    - echo "ARTIFACT_NAME=woo_powerboard-$MAJOR_MINOR-$VERSION" > VERSION.TXT
  artifacts:
    paths:
      - VERSION.TXT
    reports:
      dotenv: VERSION.TXT

publish_power_board:
  image: composer:lts
  stage: publish
#  only:
#    - power_board
  needs:
    - job: prepare_power_board_version
      artifacts: true
  script:
    - composer install
    - /bin/sh cleanup_files_for_zip.sh
    - echo "ZIP_PUBLISH_JOB_ID=$CI_JOB_ID" > zip_publish.job_id
  artifacts:
    name: $ARTIFACT_NAME
    paths:
      - ./*
    reports:
      dotenv: zip_publish.job_id

deploy_uat:
  stage: deploy_cba
  #  only:
  #    - power_board
  needs:
    - job: publish_power_board
      artifacts: true
  trigger:
    project: paydock/bounded-contexts/woocommerce/multi-project-downstream
    branch: development
  variables:
    UPSTREAM_PROJECT_ID: $CI_PROJECT_ID
    UPSTREAM_JOB_ID: $ZIP_PUBLISH_JOB_ID
  when: manual

prepare_paydock_version:
  stage: publish
  only:
    - main
  needs:
    - job: create_version
      artifacts: true
  script:
    - VERSION=$(cat version)
    - MAJOR_MINOR=$(cat paydock.php | grep "PAYDOCK_PLUGIN_VERSION'," | sed -e "s/^.*\([0-9].[0-9].[0-9]\).*$/\1/")
    - echo "ARTIFACT_NAME=woo_paydock-$MAJOR_MINOR-$VERSION" > VERSION.TXT
  artifacts:
    reports:
      dotenv: VERSION.TXT

publish_paydock:
  image: composer:lts
  stage: publish
  only:
    - main
  needs:
    - prepare_paydock_version
  script:
    - composer install
    - /bin/sh cleanup_files_for_zip.sh
  artifacts:
    name: $ARTIFACT_NAME
    paths:
      - ./*